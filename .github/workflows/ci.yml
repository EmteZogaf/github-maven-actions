name: CI

on:
  push:
    branches:
    - main
    - bugfix/**
    - feature/**
    tags:
    - v[0-9]+.[0-9]+.[0-9]+**
  pull_request:

jobs:

  foo:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.matrixgen.outputs.images }}
    steps:

      - uses: actions/checkout@v3

      - name: Generate Image Test Matrix
        id: matrixgen
        run: |
          echo "images=$(
            first=true
            echo -n '['
            for i in $(grep -r --include="docker-compose.yml" -Pho 'image: \K(.+)$' | tr -d "\"'" | sort | uniq)
            do
              if $first
              then
                first=false
              else
                echo -n ","
              fi
              echo -n '"'$i'"'
            done
            echo ']')" >> "$GITHUB_OUTPUT"


  bar:
    runs-on: ubuntu-latest
    needs: foo
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.foo.outputs.images) }}
    steps:
      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          format: sarif
          output: trivy-results.sarif
          severity: 'CRITICAL,HIGH'
          timeout: '15m0s'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 21

    - name: Cache Local Maven Repo
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
        key: maven-repo

    - name: Build with Maven
      run: mvn -B verify --file pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        USERNAME: ${{ github.actor }}

  build:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Prepare Version
      id: prep
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 21

    - name: Cache Local Maven Repo
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
        key: maven-repo

    - name: Set Version in Maven Parent Project and Submodules
      run: mvn -q versions:set -DnewVersion="${{ steps.prep.outputs.version }}" -DprocessAllModules=true

    - name: Build with Maven
      run: mvn -B deploy -DskipTests --file child/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        USERNAME: ${{ github.actor }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Child - v${{ steps.prep.outputs.version }}"
        files: |
          *.jar
        fail_on_unmatched_files: true
